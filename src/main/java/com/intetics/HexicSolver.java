package com.intetics;

public class HexicSolver {
    private final static String BOARD_TEMPLATE = "   _   _   _   _   _\n" +
            " _/ \\_/ \\_/ \\_/ \\_/ \\\n" +
            "/ \\_/ \\_/ \\_/ \\_/ \\_/\n" +
            "\\_/ \\_/ \\_/ \\_/ \\_/ \\\n" +
            "/ \\_/ \\_/ \\_/ \\_/ \\_/\n" +
            "\\_/ \\_/ \\_/ \\_/ \\_/ \\\n" +
            "/ \\_/ \\_/ \\_/ \\_/ \\_/\n" +
            "\\_/ \\_/ \\_/ \\_/ \\_/ \\\n" +
            "/ \\_/ \\_/ \\_/ \\_/ \\_/\n" +
            "\\_/ \\_/ \\_/ \\_/ \\_/ \\\n" +
            "/ \\_/ \\_/ \\_/ \\_/ \\_/\n" +
            "\\_/ \\_/ \\_/ \\_/ \\_/ \\\n" +
            "/ \\_/ \\_/ \\_/ \\_/ \\_/\n" +
            "\\_/ \\_/ \\_/ \\_/ \\_/ \\\n" +
            "/ \\_/ \\_/ \\_/ \\_/ \\_/\n" +
            "\\_/ \\_/ \\_/ \\_/ \\_/ \\\n" +
            "/ \\_/ \\_/ \\_/ \\_/ \\_/\n" +
            "\\_/ \\_/ \\_/ \\_/ \\_/ \\\n" +
            "  \\_/ \\_/ \\_/ \\_/ \\_/";

    //Links section. Value - 0-based number of connected cell. -1 means 'no connections for that direction'.
    //[0] - link #0
    //[1] - link #1
    //[2] - link #2
    //[3] - link #3
    //[4] - link #4
    //[5] - link #5
    //[6] - color. -1 means 'no color'
    private int[][] cells = new int[][]{
            // 0   1   2   3   4   5   6
            { -1, -1,  6, 10,  5, -1, -1}, // 0
            { -1, -1,  7, 11,  6, -1, -1}, // 1
            { -1, -1,  8, 12,  7, -1, -1}, // 2
            { -1, -1,  9, 13,  8, -1, -1}, // 3
            { -1, -1, -1, 14,  9, -1, -1}, // 4
            { -1,  0, 10, 15, -1, -1, -1}, // 5
            { -1,  1, 11, 16, 10,  0, -1}, // 6
            { -1,  2, 12, 17, 11,  1, -1}, // 7
            { -1,  3, 13, 18, 12,  2, -1}, // 8
            { -1,  4, 14, 19, 13,  3, -1}, // 9
            {  0,  6, 16, 20, 15,  5, -1}, // 10
            {  1,  7, 17, 21, 16,  6, -1}, // 11
            {  2,  8, 18, 22, 17,  7, -1}, // 12
            {  3,  9, 19, 23, 18,  8, -1}, // 13
            {  4, -1, -1, 24, 19,  9, -1}, // 14
            {  5, 10, 20, 25, -1, -1, -1}, // 15
            {  6, 11, 21, 26, 20, 10, -1}, // 16
            {  7, 12, 22, 27, 21, 11, -1}, // 17
            {  8, 13, 23, 28, 22, 12, -1}, // 18
            {  9, 14, 24, 29, 23, 13, -1}, // 19
            { 10, 16, 26, 30, 25, 15, -1}, // 20
            { 11, 17, 27, 31, 26, 16, -1}, // 21
            { 12, 18, 28, 32, 27, 17, -1}, // 22
            { 13, 19, 29, 33, 28, 18, -1}, // 23
            { 14, -1, -1, 34, 29, 19, -1}, // 24
            { 15, 20, 30, 35, -1, -1, -1}, // 25
            { 16, 21, 31, 36, 30, 20, -1}, // 26
            { 17, 22, 32, 37, 31, 21, -1}, // 27
            { 18, 23, 33, 38, 32, 22, -1}, // 28
            { 19, 24, 34, 39, 33, 23, -1}, // 29
            { 20, 26, 36, 40, 35, 25, -1}, // 30
            { 21, 27, 37, 41, 36, 26, -1}, // 31
            { 22, 28, 38, 42, 37, 27, -1}, // 32
            { 23, 29, 39, 43, 38, 28, -1}, // 33
            { 24, -1, -1, 44, 39, 29, -1}, // 34
            { 25, 30, 40, 45, -1, -1, -1}, // 35
            { 26, 31, 41, 46, 40, 30, -1}, // 36
            { 27, 32, 42, 47, 41, 31, -1}, // 37
            { 28, 33, 43, 48, 42, 32, -1}, // 38
            { 29, 34, 44, 49, 43, 33, -1}, // 39
            { 30, 36, 46, 50, 45, 35, -1}, // 40
            { 31, 37, 47, 51, 46, 36, -1}, // 41
            { 32, 38, 48, 52, 47, 37, -1}, // 42
            { 33, 39, 49, 53, 48, 38, -1}, // 43
            { 34, -1, -1, 54, 49, 39, -1}, // 44
    };

    public String getGameBoard() {
        return BOARD_TEMPLATE;
    }
}
